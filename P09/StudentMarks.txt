MAIN
    OUTPUT "Choose an option"
    OUTPUT "Display Marks(d)"
    OUTPUT "Exit(e)"
    DO
        INPUT markPrompt
        CASE markPrompt
            d:
                INPUT fileName
                lines := getNumLines <-- fileName
                arrayNames(CREATE String ARRAY of size lines)
                arrayMarks(CREATE real ARRAY of size lines)
                readFile <-- arrayNames, arrayMarks, fileName
            e:
                OUTPUT "Goodbye"
            DEFAULT:
                OUTPUT "Please enter valid options only"
        END CASE
    WHILE markPrompt != e
    
END MAIN

SUBMODULE getNumLines
IMPORT: fileName
EXPORT: numLines
ALGORITHM:
    theFile := OPEN fileName
    
    IF theFile CAN'T BE OPENED THEN
        FAIL(THROW EXCEPTION)
    ENDIF
 
    numLines := 0
    INPUT line from theFile
    
    WHILE (line NOT EOF)
        numLines = numLines +1
        INPUT line FROM theFile
    ENDWHILE

    CLOSE theFile
END SUBMODULE

SUBMODULE readFile
IMPORT: arrayNames(String array), arrayMarks(real array), fileName(String)
EXPORT: none
ALGORITHM: 
    theFile := OPEN fileName
    
    FOR i=0 TO LENGTH OF arrayNames(exclusive) INC BY 1
        INPUT line FROM theFile
         
        arrayNames[i] := processNames <-- line
        arrayMarks[i] := processMarks <-- line
    ENDFOR

    CLOSEFILE theFile
END SUBMODULE

SUBMODULE processNames
IMPORT: line 
EXPORT: string
ALGORITHM:
   lineArray := SPLIT line ON ","
   string := lineArray[0]
END SUBMODULE

SUBMODULE processMarks
IMPORT: line
EXPORT: real
ALGORITHM:
    lineArray := SPLIT line ON ","
    real := (convert to real)lineArray[1]
ENDSUBMODULE

















